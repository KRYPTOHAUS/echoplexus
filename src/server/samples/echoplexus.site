#
# Rewrite any http requests for domain.com to https://domain.com
#
server {
   listen 80;
   server_name chat.echoplex.us;
   return 301 https://chat.echoplex.us$request_uri;
}

#
# HTTP server definition
# uncomment me if you wish to run a non-SSL installation
#
#server {
#    listen 80;
#    server_name chat.echoplex.us;
#    proxy_buffering off;
#    location / {
#        proxy_pass http://localhost:8080;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection $connection_upgrade;
#    }
#    access_log /var/log/nginx/echoplexus/access.log;
#    error_log /var/log/nginx/echoplexus/error.log;
#}

#
# HTTPS server def'n
#
server {
    listen 443;
    server_name chat.echoplex.us;

    # This should match what you set @ server/config.coffee for:
    # server_hosted_file_transfer.size_limit (note diff units!)
    client_max_body_size 10M;

    ssl on;
    ssl_certificate /path/to/ssl.crt;
    ssl_certificate_key /path/to/ssl.key;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    ssl_protocols SSLv3 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA;
    ssl_prefer_server_ciphers on;

    proxy_buffering off; # may interfere with websockets if on

    # serve up all static webshots / user uploads via nginx
    # don't bother proxying them to express
    # !replace `/home/sandbox` with the path of the user running echoplexus!
    location /sandbox/ {
    	autoindex on;
    	alias /home/sandbox/echoplexus/public/sandbox/;
    	try_files $uri $uri/ =404;
    }

    location / {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
    access_log /var/log/nginx/echoplexus/access.ssl.log;
    error_log /var/log/nginx/echoplexus/error.ssl.log;
}
